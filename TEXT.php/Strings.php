<?php
class {
    /***
     * 
     * These functions all manipulate strings in various ways. Some more specialized sections can be found in the regular expression and URL handling sections.

For information on how strings behave, especially with regard to usage of single quotes, double quotes, and escape sequences, see the Strings entry in the Types section of the manual.
     * 
     * 
     */
    /**
     *addcslashes ― 以 C 语言风格使用反斜线转义字符串中的字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *addslashes ― 使用反斜线引用字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *bin2hex ― 函数把包含数据的二进制字符串转换为十六进制值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *chop ― rtrim 的别名
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *chr ― 返回指定的字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *chunk_split ― 将字符串分割成小块
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *convert_cyr_string ― 将字符由一种 Cyrillic 字符转换成另一种
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *convert_uudecode ― 解码一个 uuencode 编码的字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *convert_uuencode ― 使用 uuencode 编码一个字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *count_chars ― 返回字符串所用字符的信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *crc32 ― 计算一个字符串的 crc32 多项式
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *crypt ― 单向字符串散列
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *echo ― 输出一个或多个字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *explode ― 使用一个字符串分割另一个字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *fprintf ― 将格式化后的字符串写入到流
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *get_html_translation_table ― 返回使用 htmlspecialchars 和 htmlentities 后的转换表
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *hebrev ― 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *hebrevc ― 将逻辑顺序希伯来文（logical-Hebrew）转换为视觉顺序希伯来文（visual-Hebrew），并且转换换行符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *hex2bin ― 转换十六进制字符串为二进制字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *html_entity_decode ― Convert HTML entities to their corresponding characters
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *htmlentities ― 将字符转换为 HTML 转义字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *htmlspecialchars_decode ― 将特殊的 HTML 实体转换回普通字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *htmlspecialchars ― 将特殊字符转换为 HTML 实体
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *implode ― 将一个一维数组的值转化为字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *join ― 别名 implode
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *lcfirst ― 使一个字符串的第一个字符小写
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *levenshtein ― 计算两个字符串之间的编辑距离
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *localeconv ― Get numeric formatting information
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *ltrim ― 删除字符串开头的空白字符（或其他字符）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *md5_file ― 计算指定文件的 MD5 散列值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *md5 ― 计算字符串的 MD5 散列值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *metaphone ― Calculate the metaphone key of a string
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *money_format ― 将数字格式化成货币字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *nl_langinfo ― Query language and locale information
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *nl2br ― 在字符串所有新行之前插入 HTML 换行标记
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *number_format ― 以千位分隔符方式格式化一个数字
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *ord ― 转换字符串第一个字节为 0-255 之间的值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *parse_str ― 将字符串解析成多个变量
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *print ― 输出字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *printf ― 输出格式化字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *quoted_printable_decode ― 将 quoted-printable 字符串转换为 8-bit 字符串 
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *quoted_printable_encode ― 将 8-bit 字符串转换成 quoted-printable 字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *quotemeta ― 转义元字符集
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *rtrim ― 删除字符串末端的空白字符（或者其他字符）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *setlocale ― 设置地区信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *sha1_file ― 计算文件的 sha1 散列值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *sha1 ― 计算字符串的 sha1 散列值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *similar_text ― 计算两个字符串的相似度
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *soundex ― Calculate the soundex key of a string
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *sprintf ― Return a formatted string
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *sscanf ― 根据指定格式解析输入的字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_getcsv ― 解析 CSV 字符串为一个数组
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_ireplace ― str_replace 的忽略大小写版本
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_pad ― 使用另一个字符串填充字符串为指定长度
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_repeat ― 重复一个字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_replace ― 子字符串替换
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_rot13 ― 对字符串执行 ROT13 转换
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_shuffle ― 随机打乱一个字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_split ― 将字符串转换为数组
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *str_word_count ― 返回字符串中单词的使用情况
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strcasecmp ― 二进制安全比较字符串（不区分大小写）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strchr ― 别名 strstr
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strcmp ― 二进制安全字符串比较
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strcoll ― 基于区域设置的字符串比较
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strcspn ― 获取不匹配遮罩的起始子字符串的长度
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strip_tags ― 从字符串中去除 HTML 和 PHP 标记
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *stripcslashes ― 反引用一个使用 addcslashes 转义的字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *stripos ― 查找字符串首次出现的位置（不区分大小写）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *stripslashes ― 反引用一个引用字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *stristr ― strstr 函数的忽略大小写版本
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strlen ― 获取字符串长度
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strnatcasecmp ― 使用“自然顺序”算法比较字符串（不区分大小写）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strnatcmp ― 使用自然排序算法比较字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strncasecmp ― 二进制安全比较字符串开头的若干个字符（不区分大小写）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strncmp ― 二进制安全比较字符串开头的若干个字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strpbrk ― 在字符串中查找一组字符的任何一个字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strpos ― 查找字符串首次出现的位置
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strrchr ― 查找指定字符在字符串中的最后一次出现
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strrev ― 反转字符串
     *
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strripos ― 计算指定字符串在目标字符串中最后一次出现的位置（不区分大小写）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strrpos ― 计算指定字符串在目标字符串中最后一次出现的位置
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strspn ― 计算字符串中全部字符都存在于指定字符集合中的第一段子串的长度。
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strstr ― 查找字符串的首次出现
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strtok ― 标记分割字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strtolower ― 将字符串转化为小写
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strtoupper ― 将字符串转化为大写
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *strtr ― 转换指定字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *substr_compare ― 二进制安全比较字符串（从偏移位置比较指定长度）  
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *substr_count ― 计算字串出现的次数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *substr_replace ― 替换字符串的子串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *substr ― 返回字符串的子串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *trim ― 去除字符串首尾处的空白字符（或者其他字符
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *ucfirst ― 将字符串的首字母转换为大写
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *ucwords ― 将字符串中每个单词的首字母转换为大写
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *vfprintf ― 将格式化字符串写入流
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *vprintf ― 输出格式化字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *vsprintf ― 返回格式化字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *wordwrap ― 打断字符串为指定数量的字串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
}