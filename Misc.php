<?php
class MISC {
    
    /**
     * ― 检查客户端是否已经断开
     * @param unknown $param
     * @return string
     */
    function connection_aborted($param) {
        ;
        return "";
    }
    /**
     * ― 返回连接的状态位
     * @param unknown $param
     * @return string
     */
    function connection_status($param) {
        ;
        return "";
    }
    /**
     * ― 返回一个常量的值
     * @param unknown $param
     * @return string
     */
    function constant($param) {
        ;
        return "";
    }
    /**
     * ― 定义一个常量
     * @param unknown $param
     * @return string
     */
    function define($param) {
        ;
        return "";
    }
    /**
     * ― 检查某个名称的常量是否存在
     * @param unknown $param
     * @return string
     */
    function defined($param) {
        ;
        return "";
    }
    /**
     * ― 等同于 exit
     * @param unknown $param
     * @return string
     */
    function die($param) {
        ;
        return "";
    }
    /**
     * ― 把字符串作为PHP代码执行
     * @param unknown $param
     * @return string
     */
    function eval($param) {
        ;
        return "";
    }
    /**
     * ― 输出一个消息并且退出当前脚本
     * @param unknown $param
     * @return string
     */
    function exit($param) {
        ;
        return "";
    }
    /**
     * ― 获取浏览器具有的功能
     * @param unknown $param
     * @return string
     */
    function get_browser($param) {
        ;
        return "";
    }
    /**
     * ― 中断编译器的执行
     * @param unknown $param
     * @return string
     */
    function __halt_compiler($param) {
        ;
        return "";
    }
    /**
     * ― 语法高亮一个文件
     * @param unknown $param
     * @return string
     */
    function highlight_file($param) {
        ;
        return "";
    }
    /**
     * ― 字符串的语法高亮
     * @param unknown $param
     * @return string
     */
    function highlight_string($param) {
        ;
        return "";
    }
    /**
     * ― Get the system's high resolution time
     * @param unknown $param
     * @return string
     */
    function hrtime($param) {
        ;
        return "";
    }
    /**
     * ― 设置客户端断开连接时是否中断脚本的执行
     * @param unknown $param
     * @return string
     */
    function ignore_user_abort($param) {
        ;
        return "";
    }
    /**
     * ― 将数据打包成二进制字符串
     * @param unknown $param
     * @return string
     */
    function pack($param) {
        ;
        return "";
    }
    /**
     * ― 检查PHP的语法（并执行）指定的文件
     * @param unknown $param
     * @return string
     */
    function php_check_syntax($param) {
        ;
        return "";
    }
    /**
     * ― 返回删除注释和空格后的PHP源码
     * @param unknown $param
     * @return string
     */
    function php_strip_whitespace($param) {
        ;
        return "";
    }
    /**
     * ― Convert string from one codepage to another
     * @param unknown $param
     * @return string
     */
    function sapi_windows_cp_conv($param) {
        ;
        return "";
    }
    /**
     * ― Get process codepage
     * @param unknown $param
     * @return string
     */
    function sapi_windows_cp_get($param) {
        ;
        return "";
    }
    /**
     * ― Indicates whether the codepage is UTF-8 compatible
     * @param unknown $param
     * @return string
     */
    function sapi_windows_cp_is_utf8($param) {
        ;
        return "";
    }
    /**
     * ― Set process codepage
     * @param unknown $param
     * @return string
     */
    function sapi_windows_cp_set($param) {
        ;
        return "";
    }
    /**
     * ― Get or set VT100 support for the specified stream associated to an output buffer of a Windows console. 
     * @param unknown $param
     * @return string
     */
    function sapi_windows_vt100_support($param) {
        ;
        return "";
    }
    /**
     * ― 别名 highlight_file
     * @param unknown $param
     * @return string
     */
    function show_source($param) {
        ;
        return "";
    }
    /**
     * ― 延缓执行
     * @param unknown $param
     * @return string
     */
    function sleep($param) {
        ;
        return "";
    }
    /**
     * ― 获取系统的负载（load average）
     * @param unknown $param
     * @return string
     */
    function sys_getloadavg($param) {
        ;
        return "";
    }
    /**
     * ― 延缓执行若干秒和纳秒
     * @param unknown $param
     * @return string
     */
    function time_nanosleep($param) {
        ;
        return "";
    }
    /**
     * ― 使脚本睡眠到指定的时间为止。
     * @param unknown $param
     * @return string
     */
    function time_sleep_until($param) {
        ;
        return "";
    }
    /**
     * ― 生成一个唯一ID
     * @param unknown $param
     * @return string
     */
    function uniqid($param) {
        ;
        return "";
    }
    /**
     * ― Unpack data from binary string
     * @param unknown $param
     * @return string
     */
    function unpack($param) {
        ;
        return "";
    }
    /**
     *  ― 以指定的微秒数延迟执行
     * @param unknown $param
     * @return string
     */
    function usleep($param) {
        ;
        return "";
    }    
}