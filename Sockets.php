<?php
class {
    /**
     *socket_accept ― Accepts a connection on a socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_addrinfo_bind ― Create and bind to a socket from a given addrinfo
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_addrinfo_connect ― Create and connect to a socket from a given addrinfo
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_addrinfo_explain ― Get information about addrinfo
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_addrinfo_lookup ― Get array with contents of getaddrinfo about the given hostname
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_bind ― 给套接字绑定名字
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_clear_error ― 清除套接字或者最后的错误代码上的错误
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_close ― 关闭套接字资源
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *ocket_cmsg_space ― Calculate message buffer size
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_connect ― 开启一个套接字连接
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_create_listen ― Opens a socket on port to accept connections
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_create_pair ― Creates a pair of indistinguishable sockets and stores them in an array
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_create ― 创建一个套接字（通讯节点）
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_export_stream ― Export a socket extension resource into a stream that encapsulates a socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_get_option ― Gets socket options for the socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_getopt ― 别名 socket_get_option
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_getpeername ― Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_getsockname ― Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_import_stream ― Import a stream
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_last_error ― Returns the last error on the socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_listen ― Listens for a connection on a socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_read ― Reads a maximum of length bytes from a socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_recv ― 从已连接的socket接收数据
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_recvfrom ― Receives data from a socket whether or not it is connection-oriented
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_recvmsg ― Read a message
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_select ― Runs the select() system call on the given arrays of sockets with a specified timeout
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_send ― Sends data to a connected socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_sendmsg ― Send a message
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_sendto ― Sends a message to a socket, whether it is connected or not
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_set_block ― Sets blocking mode on a socket resource
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_set_nonblock ― Sets nonblocking mode for file descriptor fd
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_set_option ― Sets socket options for the socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_setopt ― 别名 socket_set_option
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_shutdown ― Shuts down a socket for receiving, sending, or both
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_strerror ― Return a string describing a socket error
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *socket_write ― Write to a socket
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    
    
    
    
    
    
    
}