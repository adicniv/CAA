<?php
class Memcache{
    /************************
     * 
     * Memcache模块提供了于memcached方便的面向过程及面向对象的接口，memcached是为了降低动态web应用 从数据库加载数据而产生的一种常驻进程缓存产品。
     * Memcache模块同时提供了一个session 处理器 (memcache).
     * Memcache module provides handy procedural and object oriented interface to memcached, highly effective caching daemon, which was especially designed to decrease database load in dynamic web applications.

The Memcache module also provides a session handler (memcache).
     * *********************
     */
    /**
     *emcache::add ― 增加一个条目到缓存服务器
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *emcache::addServer ― 向连接池中添加一个memcache服务器
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::close ― 关闭memcache连接
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::connect ― 打开一个memcached服务端连接
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::decrement ― 减小元素的值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::delete ― 从服务端删除一个元素
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::flush ― 清洗（删除）已经存储的所有的元素
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::get ― 从服务端检回一个元素
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::getExtendedStats ― 缓存服务器池中所有服务器统计信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::getServerStatus ― 用于获取一个服务器的在线/离线状态
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::getStats ― 获取服务器统计信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::getVersion ― 返回服务器版本信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::increment ― 增加一个元素的值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::pconnect ― 打开一个到服务器的持久化连接
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::replace ― 替换已经存在的元素的值
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::set ― Store data at the server
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::setCompressThreshold ― 开启大值自动压缩
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *Memcache::setServerParams ― 运行时修改服务器参数和状态
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
}

memcache_debug() ;