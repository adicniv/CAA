<?php
class File{
    /**
     * 返回路径中的文件名部分
     * Returns trailing name component of path
     * @param unknown $param
     * @return string
     */
    function basename($param) {
        return "";
    }
    /**
     * 改变文件所属的组
     * Changes file group
     * @param unknown $param
     * @return string
     */
    function chgrp($param) {
        ;
        return "";
    }
    /**
     * 改变文件模式
     * Changes file mode
     * @param unknown $param
     * @return string
     */
    function chmod($param) {
        ;
        return "";
    }
    /**
     * 改变文件的所有者
     * Changes file owner
     * @param unknown $param
     * @return string
     */
    function chown ($param) {
        ;
        return "";
    }
    /**
     * 清除文件状态缓存
     * Clears file status cache
     * @param unknown $param
     * @return string
     */
    function clearstatcache ($param) {
        ;
        return "";
    }
    /**
     * 拷贝文件
     * Copies file
     * @param unknown $param
     * @return string
     */
    function copy ($param) {
        ;
        return "";
    }
    /**
     * 参见 unlink 或 unset
     * See unlink or unset
     * @param unknown $param
     * @return string
     */
    function delete ($param) {
        ;
        return "";
    }
    /**
     * 返回路径中的目录部分
     * Returns a parent directory's path
     * @param unknown $param
     * @return string
     */
    function dirname ($param) {
        ;
        return "";
    }
    /**
     * 返回目录中的可用空间
     * Returns available space on filesystem or disk partition
     * @param unknown $param
     * @return string
     */
    function disk_free_space ($param) {
        ;
        return "";
    }
    /**
     * 返回一个目录的磁盘总大小
     * Returns the total size of a filesystem or disk partition
     * @param unknown $param
     * @return string
     */
    function disk_total_space($param) {
        ;
        return "";
    }
    /**
     * disk_free_space 的别名
     * Alias of disk_free_space
     * @param unknown $param
     * @return string
     */
    function diskfreespace ($param) {
        ;
        return "";
    }
    /**
     * 关闭一个已打开的文件指针
     * Closes an open file pointer
     * @param unknown $param
     * @return string
     */
    function fclose ($param) {
        ;
        return "";
    }
    /**
     * 测试文件指针是否到了文件结束的位置
     * Tests for end-of-file on a file pointer
     * @param unknown $param
     * @return string
     */
    function feof ($param) {
        ;
        return "";
    }
    /**
     * 将缓冲内容输出到文件
     * Flushes the output to a file
     * @param unknown $param
     * @return string
     */
    function fflush ($param) {
        ;
        return "";
    }
    /**
     *  从文件指针中读取字符
     *  Gets character from file pointer
     * @param unknown $param
     * @return string
     */
    function fgetc ($param) {
        ;
        return "";
    }
    /**
     * 从文件指针中读入一行并解析 CSV 字段
     *  Gets line from file pointer and parse for CSV fields
     * @param unknown $param
     * @return string
     */
    function fgetcsv ($param) {
        ;
        return "";
    }
    /**
     *  从文件指针中读取一行
     *  Gets line from file pointer
     * @param unknown $param
     * @return string
     */
    function fgets ($param) {
        ;
        return "";
    }
    /**
     * 从文件指针中读取一行并过滤掉 HTML 标记
     * Gets line from file pointer and strip HTML tags
     * @param unknown $param
     * @return string
     */
    function fgetss ($param) {
        ;
        return "";
    }
    /**
     * 检查文件或目录是否存在
     * Checks whether a file or directory exists
     * @param unknown $param
     * @return string
     */
    function file_exists($param) {
        ;
        return "";
    }
    /**
     * 将整个文件读入一个字符串
     * Reads entire file into a string
     * @param unknown $param
     * @return string
     */
    function file_get_contents ($param) {
        ;
        return "";
    }
    /**
     * 将一个字符串写入文件
     * Write data to a file
     * @param unknown $param
     * @return string
     */
    function file_put_contents ($param) {
        ;
        return "";
    }
    /**
     * 把整个文件读入一个数组中
     * Reads entire file into an array
     * @param unknown $param
     * @return string
     */
    function file ($param) {
        ;
        return "";
    }
    /**
     * 取得文件的上次访问时间
     * Gets last access time of file
     * @param unknown $param
     * @return string
     */
    function fileatime ($param) {
        ;
        return "";
        
    }
    /**
     * 取得文件的 inode 修改时间
     * Gets inode change time of file
     * @param unknown $param
     * @return string
     */
    function filectime ($param) {
        ;
        return "";
    }
    /**
     * 取得文件的组
     * Gets file group
     * @param unknown $param
     * @return string
     */
    function filegroup ($param) {
        ;
        return "";
    }
    /**
     *  取得文件的 inode
     *  Gets file inode
     * @param unknown $param
     * @return string
     */
    function fileinode ($param) {
        ;
        return "";
    }
    /**
     * 取得文件修改时间
     * Gets file modification time
     * @param unknown $param
     * @return string
     */
    function filemtime ($param) {
        ;
        return "";
    }
    /**
     *  取得文件的所有者
     *  Gets file owner
     * @param unknown $param
     * @return string
     */
    function fileowner ($param) {
        ;
        return "";
    }
    /**
     * 取得文件的权限
     * Gets file permissions
     * @param unknown $param
     * @return string
     */
    function fileperms ($param) {
        ;
        return "";
    }
    /**
     * 取得文件大小
     * Gets file size
     * @param unknown $param
     * @return string
     */
    function filesize ($param) {
        ;
        return "";
    }
    /**
     * 取得文件类型
     * Gets file type
     * @param unknown $param
     * @return string
     */
    function filetype($param) {
        ;
        return "";
    }
    /**
     *  轻便的咨询文件锁定
     *  Portable advisory file locking
     * @param unknown $param
     * @return string
     */
    function flock ($param) {
        ;
        return "";
    }
    /**
     * 用模式匹配文件名
     * Match filename against a pattern
     * @param unknown $param
     * @return string
     */
    function fnmatch ($param) {
        ;
        return "";
    }
    /**
     * 打开文件或者 URL
     * Opens file or URL
     * @param unknown $param
     * @return string
     */
    function fopen ($param) {
        ;
        return "";
    }
    /**
     * 输出文件指针处的所有剩余数据
     * Output all remaining data on a file pointer
     * @param unknown $param
     * @return string
     */
    function fpassthru ($param) {
        ;
        return "";
    }
    /**
     * 将行格式化为 CSV 并写入文件指针
     * Format line as CSV and write to file pointer
     * @param unknown $param
     * @return string
     */
    function fputcsv($param) {
        ;
        return "";
    }
    /**
     * fwrite 的别名
     * Alias of fwrite
     * @param unknown $param
     * @return string
     */
    function fputs ($param) {
        ;
        return "";
    }
    /**
     * 读取文件（可安全用于二进制文件）
     * Binary-safe file read
     * @param unknown $param
     * @return string
     */
    function fread($param) {
        ;
        return "";
    }
    /**
     * 从文件中格式化输入
     * Parses input from a file according to a format
     * @param unknown $param
     * @return string
     */
    function fscanf ($param) {
        ;
        return "";
    }
    /**
     * 在文件指针中定位
     * Seeks on a file pointer
     * @param unknown $param
     * @return string
     */
    function fseek ($param) {
        ;
        return "";
    }
    /**
     * 通过已打开的文件指针取得文件信息
     * Gets information about a file using an open file pointer
     * @param unknown $param
     * @return string
     */
    function fstat ($param) {
        ;
        return "";
    }
    /**
     * 返回文件指针读/写的位置
     * Returns the current position of the file read/write pointer
     * @param unknown $param
     * @return string
     */
    function ftell ($param) {
        ;
        return "";
    }
    /**
     * 将文件截断到给定的长度
     *  Truncates a file to a given length
     * @param unknown $param
     * @return string
     */
    function ftruncate ($param) {
        ;
        return "";
    }
    /**
     * 写入文件（可安全用于二进制文件）
     * Binary-safe file write
     * @param unknown $param
     * @return string
     */
    function fwrite ($param) {
        ;
        return "";
    }
    /**
     * 寻找与模式匹配的文件路径
     * Find pathnames matching a pattern
     * @param unknown $param
     * @return string
     */
    function glob ($param) {
        ;
        return "";
    }
    /**
     * 判断给定文件名是否是一个目录
     *  Tells whether the filename is a directory
     * @param unknown $param
     * @return string
     */
    function is_dir($param) {
        ;
        return "";
    }
    /***
     *  判断给定文件名是否可执行
     *  Tells whether the filename is executable
     * @param unknown $param
     * @return string
     */
    function is_executable ($param) {
        ;
        return "";
    }
    /**
     * 判断给定文件名是否为一个正常的文件
     * Tells whether the filename is a regular file
     * @param unknown $param
     * @return string
     */
    function is_file ($param) {
        ;
        return "";
    }
    /**
     *  判断给定文件名是否为一个符号连接
     *  Tells whether the filename is a symbolic link
     * @param unknown $param
     * @return string
     */
    function is_link ($param) {
        ;
        return "";
    }
    /**
     * 判断给定文件名是否可读
     * Tells whether a file exists and is readable
     * @param unknown $param
     * @return string
     */
    function is_readable($param) {
        ;
        return "";
    }
    /**
     *  判断文件是否是通过 HTTP POST 上传的
     *  Tells whether the file was uploaded via HTTP POST
     * @param unknown $param
     * @return string
     */
    function is_uploaded_file ($param) {
        ;
        return "";
    }
    /**
     * 判断给定的文件名是否可写
     * Tells whether the filename is writable
     * @param unknown $param
     * @return string
     */
    function is_writable($param) {
        ;
        return "";
    }
    /**
     * is_writable 的别名
     * Alias of is_writable
     * @param unknown $param
     * @return string
     */
    function is_writeable ($param) {
        ;
        return "";
    }
    /**
     * 修改符号链接的所有组
     * Changes group ownership of symlink
     * @param unknown $param
     * @return string
     */
    function lchgrp ($param) {
        ;
        return "";
    }
    /**
     * 修改符号链接的所有者
     *  Changes user ownership of symlink
     * @param unknown $param
     * @return string
     */
    function lchown ($param) {
        ;
        return "";
    }
    /**
     * 建立一个硬连接
     *  Create a hard link
     * @param unknown $param
     * @return string
     */
    function link($param) {
        ;
        return "";
    }
    /**
     * 获取一个连接的信息
     * Gets information about a link
     * @param unknown $param
     * @return string
     */
    function linkinfo($param) {
        ;
        return "";
    }
    /**
     * 给出一个文件或符号连接的信息
     * Gives information about a file or symbolic link
     * @param unknown $param
     * @return string
     */
    function lstat($param) {
        ;
        return "";
    }
    /**
     * 新建目录
     *  Makes directory
     * @param unknown $param
     * @return string
     */
    function mkdir ($param) {
        ;
        return "";
    }
    /**
     * 将上传的文件移动到新位置
     * Moves an uploaded file to a new location
     * @param unknown $param
     * @return string
     */
    function move_uploaded_file($param) {
        ;
        return "";
    }
    /**
     * 解析一个配置文件
     * Parse a configuration file
     * @param unknown $param
     * @return string
     */
    function parse_ini_file ($param) {
        ;
        return "";
    }
    /**
     * 解析配置字符串
     * Parse a configuration string
     * @param unknown $param
     * @return string
     */
    function parse_ini_string ($param) {
        ;
        return "";
    }
    /**
     * 返回文件路径的信息
     * Returns information about a file path
     * @param unknown $param
     * @return string
     */
    function pathinfo($param) {
        ;
        return "";
    }
    /**
     * 关闭进程文件指针
     * Closes process file pointer
     * @param unknown $param
     * @return string
     */
    function pclose ($param) {
        ;
        return "";
    }
    /**
     * 打开进程文件指针
     * Opens process file pointer
     * @param unknown $param
     * @return string
     */
    function popen($param) {
        ;
        return "";
    }
    /**
     * 输出文件
     * Outputs a file
     * @param unknown $param
     * @return string
     */
    function readfile ($param) {
        ;
        return "";
    }
    /**
     * 返回符号连接指向的目标
     * Returns the target of a symbolic link
     * @param unknown $param
     * @return string
     */
    function readlink ($param) {
        ;
        return "";
    }
    /**
     *  获取真实目录缓存的详情
     *   Get realpath cache entries
     * @param unknown $param
     * @return string
     */
    function realpath_cache_get($param) {
        ;
        return "";
    }
    /**
     * 获取真实路径缓冲区的大小
     * Get realpath cache size
     * @param unknown $param
     * @return string
     */
    function realpath_cache_size ($param) {
        ;
        return "";
    }
    /**
     * 返回规范化的绝对路径名
     * Returns canonicalized absolute pathname
     * @param unknown $param
     * @return string
     */
    function realpath ($param) {
        ;
        return "";        
    }
    /**
     * 重命名一个文件或目录
     * Renames a file or directory
     * @param unknown $param
     * @return string
     */
    function rename($param) {
        ;
        return "";
    }
    /**
     * 倒回文件指针的位置
     * Rewind the position of a file pointer
     * @param unknown $param
     * @return string
     */
    function rewind ($param) {
        ;
        return "";
    }
    /**
     *  删除目录
     *  Removes directory
     * @param unknown $param
     * @return string
     */
    function rmdir ($param) {
        ;
        return "";
    }
    /**
     * stream_set_write_buffer 的别名
     *  Alias of stream_set_write_buffer
     * @param unknown $param
     * @return string
     */
    function set_file_buffer ($param) {
        ;
        return "";
    }
    /**
     * 给出文件的信息
     * Gives information about a file
     * @param unknown $param
     * @return string
     */
    function stat($param) {
        ;
        return "";
    }
    /**
     * 建立符号连接
     *  Creates a symbolic link
     * @param unknown $param
     * @return string
     */
    function symlink($param) {
        ;
        return "";
    }
    /**
     * 建立一个具有唯一文件名的文件
     * Create file with unique file name
     * @param unknown $param
     * @return string
     */
    function tempnam($param) {
        ;
        return "";
    }
    /**
     * 建立一个临时文件
     * Creates a temporary file
     * @param unknown $param
     * @return string
     */
    function tmpfile($param) {
        ;
        return "";
    }
    /**
     * 设定文件的访问和修改时间
     *  Sets access and modification time of file
     * @param unknown $param
     * @return string
     */
    function touch ($param) {
        ;
        return "";
    }
    /***
     * 改变当前的 umask
     * Changes the current umask
     * @param unknown $param
     * @return string
     */
    function umask ($param) {
        ;
        return "";
    }
    /**
     * 删除文件
     * Deletes a file 
     * @param unknown $param
     * @return string
     */
    function unlink ($param) {
        ;
        return "";
    }
}