<?php
class {
    /**
     *curl_close ― 关闭 cURL 会话
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_copy_handle ― 复制一个cURL句柄和它的所有选项
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_errno ― 返回最后一次的错误代码
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_error ― 返回当前会话最后一次错误的字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_escape ― 使用 URL 编码给定的字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_exec ― 执行 cURL 会话
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_file_create ― 创建一个 CURLFile 对象
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_getinfo ― 获取一个cURL连接资源句柄的信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_init ― 初始化 cURL 会话
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_add_handle ― 向curl批处理会话中添加单独的curl句柄
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_close ― 关闭一组cURL句柄
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_errno ― 返回上一次 curl 批处理的错误码
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_exec ― 运行当前 cURL 句柄的子连接
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_getcontent ― 如果设置了CURLOPT_RETURNTRANSFER，则返回获取的输出的文本流
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_info_read ― 获取当前解析的cURL的相关传输信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_init ― 返回一个新cURL批处理句柄
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_remove_handle ― 移除cURL批处理句柄资源中的某个句柄资源
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_select ― 等待所有cURL批处理中的活动连接
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_select ― 等待所有cURL批处理中的活动连接
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_multi_strerror ― 返回字符串描述的错误代码
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_pause ― 暂停和取消暂停一个连接。
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_reset ― 重置一个 libcurl 会话句柄的所有的选项
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_setopt_array ― 为 cURL 传输会话批量设置选项
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_setopt ― 设置 cURL 传输选项
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_share_close ― 关闭 cURL 共享句柄
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_share_errno ― 返回共享 curl 句柄的最后一次错误号
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_share_init ― 初始化一个 cURL 共享句柄。
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_share_setopt ― 为 cURL 共享句柄设置选项。
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_share_strerror ― 返回错误号对应的错误消息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_strerror ― 返回错误代码的字符串描述
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_unescape ― 解码给定的 URL 编码的字符串
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *curl_version ― 获取 cURL 版本信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
}