<?php
class Output_Buffering{
    
    
    /**
     *刷新输出缓冲
     *Flush system output buffer
     * @param unknown $param
     * @return string
     */
    function flush ($param) {
        ;
        return "";
    }
    /**
     * 清空（擦掉）输出缓冲区
     *  Clean (erase) the output buffer
     * @param unknown $param
     * @return string
     */
    function ob_clean ($param) {
        ;
        return "";
    }
    /**
     *清空（擦除）缓冲区并关闭输出缓冲
     *Clean (erase) the output buffer and turn off output buffering
     * @param unknown $param
     * @return string
     */
    function ob_end_clean ($param) {
        ;
        return "";
    }
    /**
     * 冲刷出（送出）输出缓冲区内容并关闭缓冲
     *  Flush (send) the output buffer and turn off output buffering
     * @param unknown $param
     * @return string
     */
    function ob_end_flush ($param) {
        ;
        return "";
    }
    /**
     *冲刷出（送出）输出缓冲区中的内容
     * Flush (send) the output buffer
     * @param unknown $param
     * @return string
     */
    function fob_flush ($param) {
        ;
        return "";
    }
    /**
     *得到当前缓冲区的内容并删除当前输出缓。
     * Get current buffer contents and delete current output buffer
     * @param unknown $param
     * @return string
     */
    function ob_get_clean ($param) {
        ;
        return "";
    }
    /**
     *返回输出缓冲区的内容
     *Return the contents of the output buffer
     * @param unknown $param
     * @return string
     */
    function ob_get_contents($param) {
        ;
        return "";
    }
    /**
     *刷出（送出）缓冲区内容，以字符串形式返回内容，并关闭输出缓冲区。
     *Flush the output buffer, return it as a string and turn off output buffering
     * @param unknown $param
     * @return string
     */
    function ob_get_flush ($param) {
        ;
        return "";
    }
    /**
     *返回输出缓冲区内容的长度
     * Return the length of the output buffer
     * @param unknown $param
     * @return string
     */
    function ob_get_length($param) {
        ;
        return "";
    }
    /**
     *返回输出缓冲机制的嵌套级别
     * Return the nesting level of the output buffering mechanism
     * @param unknown $param
     * @return string
     */
    function ob_get_level ($param) {
        ;
        return "";
    }
    /**
     *得到所有输出缓冲区的状态
     *Get status of output buffers
     * @param unknown $param
     * @return string
     */
    function ob_get_status($param) {
        ;
        return "";
    }
    /**
     *在ob_start中使用的用来压缩输出缓冲区中内容的回调函数。ob_start callback function to gzip output buffer
     *ob_start callback function to gzip output buffer
     * @param unknown $param
     * @return string
     */
    function ob_gzhandler ($param) {
        ;
        return "";
    }
    /**
     *打开/关闭绝对刷送
     *Turn implicit flush on/off
     * @param unknown $param
     * @return string
     */
    function ob_implicit_flush($param) {
        ;
        return "";
    }
    /**
     * 列出所有使用中的输出处理程序。
     * List all output handlers in use
     * @param unknown $param
     * @return string
     */
    function ob_list_handlers ($param) {
        ;
        return "";
    }
    /**
     * 打开输出控制缓冲
     * Turn on output buffering
     * @param unknown $param
     * @return string
     */
    function ob_start ($param) {
        ;
        return "";
    }
    /**
     *添加URL重写器的值（Add URL rewriter values）
     * Add URL rewriter values
     * @param unknown $param
     * @return string
     */
    function output_add_rewrite_var ($param) {
        ;
        return "";
    }
    /**
     *重设URL重写器的值（Reset URL rewriter values）
     *Reset URL rewriter values
     * @param unknown $param
     * @return string
     */
    function output_reset_rewrite_vars ($param) {
        ;
        return "";
    }
}