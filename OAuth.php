<?php
class {
    /***************************
     * 
     * OAuth 类
     * *************************
     */
    /**
     *OAuth::__construct ― 新建一个 OAuth 对象
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::__destruct ― 析构函数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::disableDebug ― 关闭详细的调试
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::disableRedirects ― 关闭重定向
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::disableSSLChecks ― 关闭 SSL 检查
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::enableDebug ― 启用详细调试
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::enableRedirects ― 启用重定向
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::enableSSLChecks ― 启用 SSL 检查
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::fetch ― 获取一个 OAuth 受保护的资源
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::generateSignature ― 生成一个签名
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::getAccessToken ― 获取一个访问令牌
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::getCAPath ― 获取 CA 信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::getLastResponse ― 获取最后一次的响应
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::getLastResponseHeaders ― 获取最后一次响应的头信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::getLastResponseInfo ― 获取关于最后一次响应的 HTTP 信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::getRequestHeader ― 生成 OAuth 头信息字符串签名
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::getRequestToken ― 获取一个请求令牌
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setAuthType ― 设置授权类型
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setCAPath ― 设置 CA 路径和信息
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setNonce ― 为后续请求设置现时标志
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setRequestEngine ― 设置目标请求引擎
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setRSACertificate ― 设置 RSA 证书
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setSSLChecks ― 调整特定的SSL请求检查
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setTimestamp ― 设置时间戳
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setToken ― 设置令牌和 secret
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuth::setVersion ― 设置 OAuth 版本
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /********************************
     * 
     * 
     * OAuthProvider::addRequiredParameter ― 添加必需的参数
     * 
     */
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::callconsumerHandler ― 调用 consumerNonceHandler 回调函数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::callTimestampNonceHandler ― 调用 timestampNonceHandler 回调函数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::calltokenHandler ― 调用 tokenNonceHandler 回调函数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::checkOAuthRequest ― 检查一个 oauth 请求
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::__construct ― 新建一个 OAuthProvider 对象
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::consumerHandler ― 设置 consumerHandler 句柄回调函数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::generateToken ― 生成一个随机令牌
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::is2LeggedEndpoint ― is2LeggedEndpoint
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::isRequestTokenEndpoint ― 设置 isRequestTokenEndpoint
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::removeRequiredParameter ― 移除一个必需的参数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::reportProblem ― 报告问题
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::setParam ― 设置一个参数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::setRequestTokenPath ― 设置请求令牌路径
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::timestampNonceHandler ― 设置 timestampNonceHandler 句柄回调函数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /**
     *OAuthProvider::tokenHandler ― 设置 tokenHandler 句柄回调函数
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /***********************************
     * 
     * OAuthException 类
     * 
     */
    /**
     *
     * @param unknown $param
     * @return string
     */
    function function_name($param) {
        ;
        return "";
    }
    /******************************
     * 
     * OAuth 函数
     */
    //oauth_get_sbs ― 生成一个签名字符基串
    //oauth_urlencode ― 将 URI 编码为 RFC 3986 规范
    
    
    
    
    
    
}